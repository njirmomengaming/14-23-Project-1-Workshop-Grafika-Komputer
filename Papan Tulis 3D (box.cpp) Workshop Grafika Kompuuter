Arya Yudistira Pratama: 5222600014
Mohammad Aditya Rahman: 5222600023

Workshop Grafika Komputer

kode ini akan berfungsi di box.cpp
gunakan tombol panah untuk menggerakan output

#include <iostream>
#include <GL/glew.h>
#include <GL/freeglut.h> 

float angleX = 0.0f;
float angleY = 0.0f;

int mouseX, mouseY;
bool isMouseDragging = false;

void drawScene(void)
{
    glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
    glColor3f(0.9, 0.9, 0.9);
    glLoadIdentity();

    glTranslatef(0.0, 0.0, -15.0);
    glRotatef(angleX, 1.0, 0.0, 0.0);
    glRotatef(angleY, 0.0, 1.0, 0.0);

    glPushMatrix();
    glScalef(8.0, 4.0, 0.21);
    glutSolidCube(1.0);
    glPopMatrix();

    glColor3f(0.0, 0.0, 0.0); 
    glPushMatrix();
    glScalef(8.2, 4.2, 0.2);
    glutSolidCube(1.0);
    glPopMatrix();

    glFlush();
    glutSwapBuffers();
}


void setup(void)
{
    glClearColor(1.0, 1.0, 1.0, 0.0);
    glEnable(GL_DEPTH_TEST);
}


void resize(int w, int h)
{
    glViewport(0, 0, w, h);
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    gluPerspective(60.0, (float)w / (float)h, 1.0, 100.0);

    glMatrixMode(GL_MODELVIEW);
}


void keyInput(unsigned char key, int x, int y)
{
    switch (key)
    {
    case 27: // Escape key
        exit(0);
        break;
    default:
        break;
    }
}


void specialKeyInput(int key, int x, int y)
{
    switch (key)
    {
    case GLUT_KEY_LEFT:
        angleY -= 5.0;
        break;
    case GLUT_KEY_RIGHT:
        angleY += 5.0;
        break;
    case GLUT_KEY_UP:
        angleX -= 5.0;
        break;
    case GLUT_KEY_DOWN:
        angleX += 5.0;
        break;
    }
    glutPostRedisplay();
}


void mouse(int button, int state, int x, int y)
{
    if (button == GLUT_LEFT_BUTTON)
    {
        if (state == GLUT_DOWN)
        {
            isMouseDragging = true;
            mouseX = x;
            mouseY = y;
        }
        else if (state == GLUT_UP)
        {
            isMouseDragging = false;
        }
    }
}


void mouseMotion(int x, int y)
{
    if (isMouseDragging)
    {
        int dx = x - mouseX;
        int dy = y - mouseY;

        angleY += static_cast<float>(dx) * 0.5f;
        angleX += static_cast<float>(dy) * 0.5f;

        mouseX = x;
        mouseY = y;

        glutPostRedisplay();
    }
}


int main(int argc, char** argv)
{
    glutInit(&argc, argv);

    glutInitContextVersion(4, 3);
    glutInitContextProfile(GLUT_COMPATIBILITY_PROFILE);

    glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGBA | GLUT_DEPTH);
    glutInitWindowSize(500, 500);
    glutInitWindowPosition(100, 100);
    glutCreateWindow("3D Whiteboard");

    glutDisplayFunc(drawScene);
    glutReshapeFunc(resize);
    glutKeyboardFunc(keyInput);
    glutSpecialFunc(specialKeyInput);
    glutMouseFunc(mouse); 
    glutMotionFunc(mouseMotion);

    glewExperimental = GL_TRUE;
    glewInit();

    setup();

    glutMainLoop();
    return 0;
}
